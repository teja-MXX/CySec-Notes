- Check if there is .git endpoint in all subdomains
-. If you found input boxes , try to fuzz it to see if any unexpected is found
	- Take the request in burp and save it and use it in FFUF to fuzz it
		ffuf -request ssrf.req -w ports -request-proto http -fs 61

- If you find any input boxes , try SQLi . Try SQLi in every page

- If you find any way to make a GET request to your local python server , check if it can 
   access internal   ports using SSRF .
		- Intercept the http request where the URL is made , and change the the IP to 127.0.0.1 and  
		  change ports and see if there is any change in response size
	    - Check this video - https://youtu.be/eggi_GQo9fk

- Do gobuster and ffuf for subdomain enum

- If there is any login page , check for default creds

- robots.txt

- Check if it nginx or apache or IIS

- Check the website and see if we can open any links . Investigate all the links pages

- Check source page . Check if there are any javascript files
- Do gobuster . Subdir enum 
	a. Use /opt/SecLists/Discovery/Web-Content/raft-small-words.txt
- Check if the page is PHP or HTML

- If you see login page , check for default creds like admin:password . Or google for default credentials of that login service

- Or check for exploit

- If you login , check if you can upload reverse shell 

- Do fuzzing with ffuf for subdomains , subdirectories and username passwords or files
	a. How to Fuzz Web Applications using FFuf â€“ Web Security Tutorial

- Check if there is any .git subdir and try to dump the git repo using git-dumper 
	a. If yes , do grep password -R and try to search passwords

- When you get reverse shell , check for DB in config files any mention of DB . Either in website root folder or in Apache directory or something

- If you found any hash - az
	a. Open crackstation to crack the hash
	b. Or hash-identifier to find the hash type
	c. Once identified use hashcat or john the ripper

- If you don't find anything juicy in dir buster , do recursive search on all found directories until you find something useful

- If you found dev in subdomain enum , try .git subdirectory to see if any git is there 
	a. If 403 error is there , acess forbidden --- > Try to use git-dumper to dump the repo if you can

- If there is a Dockerfile , check for config file if we can access for username or passwords or other config files

- If you can read files , check the IMPORTANT FILES which can get you interesting info

- Do code review Code Review if code is available through git dump 

- Check for Server and it's version by doing curl request
		- curl -I http://<target-ip>:<port>

- If the server is spring boot , check actuator endpoint 	
		- http://<target-ip>:<port>/actuator/env
		- http://<target-ip>:<port>/actuator/heapdump
		- http://<target-ip>:<port>/actuator
		- http://<target-ip>:<port>/actuator/mappings
		- http://<target-ip>:<port>/actuator/loggers

- If you know the framework , try to bust it common endpoints like above for springboot

- If you find Maven project , check the pom.xml if any jars are vulnerable by uploading in chatGPT

